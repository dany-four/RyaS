#pragma once
//remember
    //compile RYCLOCK with -D RYCLOCK_EXPORTS
    //compile program normally
#ifdef RYCLOCK_EXPORTS
    #define RYCLOCK __declspec(dllexport)
#else
    #define RYCLOCK __declspec(dllimport)
#endif
#define RYCLOCKCALL __cdecl

#include<chrono>
using namespace std::chrono;
class RYClock{
    public:
    RYClock();

    // returns elapsed time in seconds
    float getTime();
    void reset();
    bool resetEach(float);
    void operator ! ();

    void pointA();
    // give elapsed time since the last call to pointA 
    float pointB();

    private:
    float old=0;// for measure pointA to pointB 
    steady_clock::time_point start_point;
};